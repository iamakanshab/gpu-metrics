# grafana-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.0.0
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Viewer"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: metrics
spec:
  type: NodePort  # Using NodePort as you mentioned LoadBalancer was pending earlier
  selector:
    app: grafana
  ports:
  - name: http
    port: 3000
    targetPort: http
    nodePort: 30300  # This will make Grafana available on port 30300 on any node
